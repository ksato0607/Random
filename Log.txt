1/28  Created test.html and tested Metro-UI-CSS.html
1/29  Read a HTML textbook.
      1. Files are organized
1/30  Learning Sass:
      IMPORTANT syntax: sass --watch style.scss:style.css
1/31  Learned variable using Sass
      - % can be added
2/1   -Variable
      -Nesting(keep code organized)
      -Mixins (like a method with variable)
2/2   -Selector Inheritance (do not need to write same code)
      -Basic SASS is over
      -Reading HTML textbook (P.88)
2/3   -Reading HTML textbook (P.94)
2/4   -Learn From HTML textbook (P.108~P.117)
      -Learn text editor packages
      -Learn JavaScript (http://www.w3schools.com/js/js_output.asp)
2/5   -Learn From HTML textbook (P.94~P.108)
      -Basics HTML section is over. Now learning CSS.
      -Learn JavaScript (http://www.w3schools.com/js/js_functions.asp)
2/6   -Learn From HTML textbook (P.117~P.130)
      -Learn JavaScript (http://www.w3schools.com/js/js_events.asp)
        -Object function
2/7   -Interview
2/8   -Learn From HTML textbook (P.130~P.152)
      -Learn JavaScript (http://www.w3schools.com/js/js_if_else.asp)
        -Events
        -Arrays
        -Sorting
        -Ternary Operator
2/9   -Learn From HTML textbook (P.152~P.174)
      -Learn JavaScript (http://www.w3schools.com/js/js_hoisting.asp)
        -Bitwise Operation
        -Error
2/11  -Learn From HTML textbook (P.174-P.188)
      -Learn JavaScript (http://www.w3schools.com/js/js_mistakes.asp)
        -Global variable
      -SQL (http://www.w3schools.com/sql/default.asp)
2/12  -Learn From HTML textbook (P.188-P.210)
        -transition
      -Learn JavaScript (http://www.w3schools.com/js/js_function_definition.asp)
        -Improving performance (Minimize DOM access)
        -Object
        -Prototype (Constructor)
        -Function is not executable
      -SQL (http://www.w3schools.com/sql/sql_func_avg.asp)
        -wildcards
        -Join
        -Select Into
        -Check
        -Index
2/13  -Search React, SCSS, Node.js, Flask, Django, Kanban
        -ReactJS: JavaScript library for UI
        -SCSS: Hmmm... similar to SASS?
        -Node.js: It is a minimal JS framework for server side programming.
        -Flask: A python framework.
        -Django: A python framework.
        -Kanban: Agile software methodology. Use Kanban board.
      -SQL (Complete)
        -Group By, Having
        -Round
      -PHP (http://www.w3schools.com/php/php_variables.asp)
      -Learn JavaScript (http://www.w3schools.com/js/js_ajax_intro.asp)
        -Argument Object
        -this vs window
        -In JavaScript, functions are objects
        -Closure: because we don't want to use global variable.
        -Self-involking function () () = closure
        -Global variable belongs to web Object.
        -DOM = "everything related with HTML elements".
        -setTimeout & setInterval
      -Learn From HTML textbook (P.210-P.232)
2/14  -Learn From HTML textbook (P.232-P.286 Done!)
        -Responsive website
        -<meta name="viewport" content="width=device-width, initial-scale=1">
        -Media Queries
        -@media screen and (max-width : 767px)
        -box-sizing: border-box; padding and border are included in width and height
        -Use Markup Validation Site (https://validator.w3.org/)
        -SEO: Write description. <meta name="description" content="something something">
          -Add this for all pages
        -Add favicon. <link rel="shortcut icon" href="favicon.ico">
      -PHP (http://www.w3schools.com/php/php_datatypes.asp)
        -Global scope cannot be used inside function in PHP, so put globe in function
        -
      -JavaScript (http://www.w3schools.com/js/js_ajax_http_send.asp)
        -AJAX
        -How to send information to server using ajax?
          1. XMLHttpRequest object is created by javascript
          2. XMLHttpRequest object sends a request to a web server
          3. The server processes the info.
2/18  -PHP ()
        -GET VS POST
        -Security (htmlspecialchars())
        -File Handling
        -enctype="multipart/form-data is required when input type is file.
        -session
        -filter: validate external data
      -JavaScript (https://www.w3schools.com/js/js_ajax_http.asp)
2/19  -PHP is done
      -JavaScript is done except Ajax call
      -Took technical tests.
2/20  -Revise technical tests
        -Trait is similar to class. I need to learn this more.
        -Union operator combines the result of multiple SELECT statements.
        -slice(int x) is like substring for array.
        -Join is same as inner join.
      -JSON (https://www.w3schools.com/js/js_json_syntax.asp)
        -JavaScript Object Notation
        -JSON can be converted to JavaScript easily.
        -JSON is useful when JavaScript communicates with server.
        -JavaScript object can be stored as text. It will be useful.
        -Sending data: JSON.stringify(myObj);
        -Receiving data: JSON.parse(myJSON);
2/21
      -Revised technical tests
      -Do what you like (Displaying real time data)
        -Find a sample & example
      -JSON (https://www.w3schools.com/js/js_json_parse.asp)
        -reviver: Check each property
        -json_encode($myObj)
2/22
      -Display form (Done)
      -Figure out (displaying real time data)
2/23
      -Learn AJAX -> Quickly go through JSON (https://www.w3schools.com/js/js_ajax_http.asp)
        -A callback function is a function passed as a parameter to another function.
      -Practical problems
      -jQuery (https://www.w3schools.com/jquery/jquery_get_started.asp)
2/24
      -Working on practical problems
2/25
      -Working on practical problems


Things to do:
1. HTML
   -how browser loads HTML
   -good structure vs bad structure
   -Understand everything about my website
   CSS
   -Know what you can do with CSS
   -Understand responsive
   JavaScript
   -language patterns
   -Idioms
   -Event system
   -Ajax
   -Asynchronous
   -The way context works
   -The way it gets imported by the browser
   -How to reload small parts
   -How to attach behavior to any parts of page
   -More hands on practices
2. Work on Wordpress with php and display data
3. Form with Node.js and PHP
4. Complete JQuery on W3Schools
5. Real time data
6. Try Heroku
7. URL reader
8. AI
9. Node.js
10. React
11. PHP
    -Advanced PHP (Cookie)
    -Database connection

Done:
1. Sass
2. HTML & CSS (Textbook)
4. SQL
5. PHP (still very limited)
6. JSON
7. JavaScript
