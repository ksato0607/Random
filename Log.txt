1/28  Created test.html and tested Metro-UI-CSS.html
1/29  Read a HTML textbook.
      1. Files are organized
1/30  Learning Sass:
      IMPORTANT syntax: sass --watch style.scss:style.css
1/31  Learned variable using Sass
      - % can be added
2/1   -Variable
      -Nesting(keep code organized)
      -Mixins (like a method with variable)
2/2   -Selector Inheritance (do not need to write same code)
      -Basic SASS is over
      -Reading HTML textbook (P.88)
2/3   -Reading HTML textbook (P.94)
2/4   -Learn From HTML textbook (P.108~P.117)
      -Learn text editor packages
      -Learn JavaScript (http://www.w3schools.com/js/js_output.asp)
2/5   -Learn From HTML textbook (P.94~P.108)
      -Basics HTML section is over. Now learning CSS.
      -Learn JavaScript (http://www.w3schools.com/js/js_functions.asp)
2/6   -Learn From HTML textbook (P.117~P.130)
      -Learn JavaScript (http://www.w3schools.com/js/js_events.asp)
        -Object function
2/7   -Interview
2/8   -Learn From HTML textbook (P.130~P.152)
      -Learn JavaScript (http://www.w3schools.com/js/js_if_else.asp)
        -Events
        -Arrays
        -Sorting
        -Ternary Operator
2/9   -Learn From HTML textbook (P.152~P.174)
      -Learn JavaScript (http://www.w3schools.com/js/js_hoisting.asp)
        -Bitwise Operation
        -Error
2/11  -Learn From HTML textbook (P.174-P.188)
      -Learn JavaScript (http://www.w3schools.com/js/js_mistakes.asp)
        -Global variable
      -SQL (http://www.w3schools.com/sql/default.asp)
2/12  -Learn From HTML textbook (P.188-P.210)
        -transition
      -Learn JavaScript (http://www.w3schools.com/js/js_function_definition.asp)
        -Improving performance (Minimize DOM access)
        -Object
        -Prototype (Constructor)
        -Function is not executable
      -SQL (http://www.w3schools.com/sql/sql_func_avg.asp)
        -wildcards
        -Join
        -Select Into
        -Check
        -Index
2/13  -Search React, SCSS, Node.js, Flask, Django, Kanban
        -ReactJS: JavaScript library for UI
        -SCSS: Hmmm... similar to SASS?
        -Node.js: It is a minimal JS framework for server side programming.
        -Flask: A python framework.
        -Django: A python framework.
        -Kanban: Agile software methodology. Use Kanban board.
      -SQL (Complete)
        -Group By, Having
        -Round
      -PHP (http://www.w3schools.com/php/php_variables.asp)
      -Learn JavaScript (http://www.w3schools.com/js/js_ajax_intro.asp)
        -Argument Object
        -this vs window
        -In JavaScript, functions are objects
        -Closure: because we don't want to use global variable.
        -Self-involking function () () = closure
        -Global variable belongs to web Object.
        -DOM = "everything related with HTML elements".
        -setTimeout & setInterval
      -Learn From HTML textbook (P.210-P.232)
2/14  -Learn From HTML textbook (P.232-P.286 Done!)
        -Responsive website
        -<meta name="viewport" content="width=device-width, initial-scale=1">
        -Media Queries
        -@media screen and (max-width : 767px)
        -box-sizing: border-box; padding and border are included in width and height
        -Use Markup Validation Site (https://validator.w3.org/)
        -SEO: Write description. <meta name="description" content="something something">
          -Add this for all pages
        -Add favicon. <link rel="shortcut icon" href="favicon.ico">
      -PHP (http://www.w3schools.com/php/php_datatypes.asp)
        -Global scope cannot be used inside function in PHP, so put globe in function
        -
      -JavaScript (http://www.w3schools.com/js/js_ajax_http_send.asp)
        -AJAX
        -How to send information to server using ajax?
          1. XMLHttpRequest object is created by javascript
          2. XMLHttpRequest object sends a request to a web server
          3. The server processes the info.
2/18  -PHP ()
        -GET VS POST
        -Security (htmlspecialchars())
        -File Handling
        -enctype="multipart/form-data is required when input type is file.
        -session
        -filter: validate external data
      -JavaScript (https://www.w3schools.com/js/js_ajax_http.asp)
2/19  -PHP is done
      -JavaScript is done except Ajax call
      -Took technical tests.
2/20  -Revise technical tests
        -Trait is similar to class. I need to learn this more.
        -Union operator combines the result of multiple SELECT statements.
        -slice(int x) is like substring for array.
        -Join is same as inner join.
      -JSON (https://www.w3schools.com/js/js_json_syntax.asp)
        -JavaScript Object Notation
        -JSON can be converted to JavaScript easily.
        -JSON is useful when JavaScript communicates with server.
        -JavaScript object can be stored as text. It will be useful.
        -Sending data: JSON.stringify(myObj);
        -Receiving data: JSON.parse(myJSON);
2/21
      -Revised technical tests
      -Do what you like (Displaying real time data)
        -Find a sample & example
      -JSON (https://www.w3schools.com/js/js_json_parse.asp)
        -reviver: Check each property
        -json_encode($myObj)
2/22
      -Display form (Done)
      -Figure out (displaying real time data)
2/23
      -Learn AJAX -> Quickly go through JSON (https://www.w3schools.com/js/js_ajax_http.asp)
        -A callback function is a function passed as a parameter to another function.
      -Practical problems
      -jQuery (https://www.w3schools.com/jquery/jquery_get_started.asp)
2/24
      -Working on practical problems
2/25
      -Working on practical problems
2/26
      -Break
2/27
      -AngularJS (https://www.w3schools.com/angular/angular_modules.asp)
        -ng-app
        -ng-bind (same as {{ }})
        -ng-init
        -ng-model
        -ng-controller
      -Single Page Application (I haven't fully understood yet)
        -Use AJAX and HTML5
        -It does not need to reload the whole page and just transfer data
        -A lot of work is done on client side
        -Faster
2/28
      -Angular
3/1
      -Convert currency using JSON API
3/2
      -Socket.io (Javascript library)
      -Express
      -Currency converter is done
      -Xpath (https://www.w3schools.com/xml/xpath_axes.asp)
      -Node.js: nodemon app.js
3/3
      -Xpath is done
3/4
      -CoffeeScript: a language that gets compiled to JavaScript
        -We will write less code in coffeescript than javascript
        -We can avoid mistakes like ambiguous comparison operators and closures.
3/5
      -What makes browsers different?
        -Speed
        -fonts, HTML style
3/6-3/7
      -Nothing
3/8
      -Heroku
      -AngularJS (https://www.w3schools.com/angular/angular_directives.asp)
        -ng-app
        -ng-bind (same as {{ }})
        -ng-init
        -ng-model
        -ng-controller
        -Module: container for the application controllers
        -Directive (built in)
3/9
      -Heroku
3/10
      -Improving data tableHeader
      -Work on closures (Good resource: https://gist.github.com/hallettj/64478)
      -Work on Heroku
      -Review
3/11
      -Finished improving a real problem using closures
      -DOM: It is a programming interface for HTML and XML documents.
            It provides a structured representation of the document.
            DOM connects web pages to programming languages.
            Different browsers have different implementations of the DOM.
      -What is the difference between HTML and DOM?
            DOM is the tree model to represent HTML. (document->html->element(head,body))
            DOM CREATES STRUCTURES.
            HTML is just one of the languages. XML is another one.
      -What is object oriented programming?
            It includes objects, class, interface, inheritance and packages.
      -What is compiler?
            Compiler is a computer program that transforms source code in a programming language to
            a machine language. Machine language typically has binary format.
      -jQuery (https://www.w3schools.com/jquery/jquery_selectors.asp)
3/12
      -jQuery (https://www.w3schools.com/jquery/jquery_slide.asp)
            -Toggle, focus, blur, on
      -Web Scraping: Extracting data from websites and turning unstructured data to structured data.
            -Purpose 1: E.g. Kayak, we can see the price comparison from other websites
            -Purpose 2: Measuring online presence about service/product
            -Purpose 3: Measuring online reputation
            -Purpose 4: Collecting public opinions
      -Deploy my website
3/13
      -jQuery (https://www.w3schools.com/jquery/jquery_animate.asp)
      -Generated a table with Postgresql
      -My website is running on Heroku (https://triptriptrip.herokuapp.com/)
3/14
      -jQuery (https://www.w3schools.com/jquery/jquery_dom_set.asp)
            -animate()
            -stop()
            -callback
            -chaining
      -Why do we use AnguarJS?
            1. MVC are working well.
            2. Filters are available. (filters data)
            3. Writing less code.
      -Why do we use framework by the way?
            1. We do not have to know how to architect. Writing plain code with good architecture
               will be somewhat similar to framework.
            2. Security
            3. routing (single page application)
      -Bootstrap (https://www.w3schools.com/bootstrap/bootstrap_grid_basic.asp)
3/15
      -jQuery(https://www.w3schools.com/jquery/jquery_dom_add.asp)
      -Get better understanding of real time display

      -Coffeescript
      -Node.js
      -Ruby
      -what does http request do?
      -Single thread/multiple threads
      -bootstrap
      -jquery
      -Restful API
3/18
      -Building a calculator for my uncle
      -<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
3/19
      -Building a calculator for my uncle
3/20
      -First draft is done.
3/22
      -Installed RubyMine
      -Started learning Ruby
        -define variables
        -loop
        -if __FILE__ == $0
3/23
      -Reviewed 3/22
3/24
      -to_s, reverse, length
      -array, sort
3/25
      -Ruby (https://www.tutorialspoint.com/ruby/ruby_operators.htm)
      -Class variable (It's like static variable)
      -constants
      -hashes
      -ranges (10..15) includes 15, but (10...15) does not include 15
3/26
      -Ruby (https://www.tutorialspoint.com/ruby/ruby_comments.htm)
      

Things to do:
1. HTML
   -how browser loads HTML
   -good structure vs bad structure
   -Understand everything about my website
   CSS
   -Know what you can do with CSS
   -Understand responsive
   JavaScript
   -language patterns
   -Idioms
   -Event system
   -Ajax
   -Asynchronous
   -The way context works
   -The way it gets imported by the browser
   -How to reload small parts
   -How to attach behavior to any parts of page
   -More hands on practices
2. Work on Wordpress with php and display data
3. Form with Node.js and PHP
4. Complete JQuery on W3Schools
5. Real time data
6. Try Heroku
7. URL reader
8. AI
9. Node.js
10. React
11. PHP
    -Advanced PHP (Cookie)
    -Database connection
12. Single Page Application
13. RESTful API
14. Threads

Done:
1. Sass
2. HTML & CSS (Textbook)
4. SQL
5. PHP (still very limited)
6. JSON
7. JavaScript
8. Heroku (Postgresql)
9.
